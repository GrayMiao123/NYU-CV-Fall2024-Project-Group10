# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with only P2, P3, P4 outputs, but keeping GAM_Attention and SPPFCSPC on P4

# Parameters
nc: 50  # number of classes
scales:
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8 backbone (no P5, but keep GAM and SPPF on P4)
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]       # 0: P1/2
  - [-1, 1, Conv, [128, 3, 2]]      # 1: P2/4
  - [-1, 3, C2f, [128, True]]       # 2
  - [-1, 1, Conv, [256, 3, 2]]      # 3: P3/8
  - [-1, 6, C2f, [256, True]]       # 4
  - [-1, 1, Conv, [512, 3, 2]]      # 5: P4/16
  - [-1, 6, C2f, [512, True]]       # 6: P4 output

  - [-1, 3, GAM_Attention, [512]]   # 7: GAM on P4
  - [-1, 1, SPPFCSPC, [512, 5]]     # 8: SPPF on P4

# YOLOv8 head (only P2, P3, P4)
head:

  # Upsample P4 -> P3
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 9: upsample P4->P3 scale
  - [[-1,4], 1, Concat, [1]]                    # 10: concat with P3 (4)
  - [-1, 3, C2f, [256]]                        # 11: refined P3

  # Upsample P3 -> P2
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 12: upsample P3->P2 scale
  - [[-1,2], 1, Concat, [1]]                   # 13: concat with P2 (2)
  - [-1, 3, C2f, [128]]                        # 14: refined P2

  # Detect with P2, P3, P4
  - [[14, 11, 8], 1, Detect, [nc]]             # Detect(P2, P3, P4)
